import { Injectable } from '@nestjs/common';
import { OllamaService } from 'src/modules/ollama/ollama.service';
import { Context } from 'telegraf';

export class CustomContext extends Context {
  payload: string;
}

@Injectable()
export default class BotService {
  constructor(private readonly ollamaService: OllamaService) {}

  async onStart(ctx: Context) {
    const welcomeMessage = `
ü§ñ –ü—Ä–∏–≤–µ—Ç! –Ø –≤–∞—à Telegram –±–æ—Ç.

–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
/start - –ø–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ
/ollama - —Ä–∞–±–æ—Ç–∞ —Å Ollama AI

–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–º–æ—â–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /help
`.trim();

    await ctx.reply(welcomeMessage);
  }

  async onHelp(ctx: Context) {
    const helpMessage = `
üìö –°–ø—Ä–∞–≤–∫–∞ –ø–æ –∫–æ–º–∞–Ω–¥–∞–º –±–æ—Ç–∞:

/start - –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
/help - –ø–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É
/ollama - —Ä–∞–±–æ—Ç–∞ —Å Ollama AI

üí° –ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.
    `.trim();

    await ctx.reply(helpMessage);
  }

  async ollama(ctx: Context) {
    ctx.reply('Resetting prev session...');

    const custom_ctx = ctx as CustomContext;

    const prompt = custom_ctx.payload;

    const response = await this.ollamaService.generate({
      model: 'llama3',
      prompt,
      stream: false,
    });

    const reply = response.response;

    await ctx.reply(reply);
  }

  async message(ctx: Context) {
    console.log('message', ctx);
  }
}
